{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Developer/School/CS1920/COVID-19-Frontend/src/components/SupplyList/DynamicFilters.js\";\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { CaretDownFill } from 'react-bootstrap-icons';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport React, { useState } from 'react'; // The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\n\nconst CustomToggle = React.forwardRef(({\n  children,\n  onClick\n}, ref) => /*#__PURE__*/React.createElement(\"a\", {\n  href: \"\",\n  ref: ref,\n  onClick: e => {\n    e.preventDefault();\n    onClick(e);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, children, \"\\xA0\", /*#__PURE__*/React.createElement(CaretDownFill, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}))); // forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\n\nconst CustomMenu = React.forwardRef(({\n  children,\n  style,\n  className,\n  'aria-labelledby': labeledBy\n}, ref) => {\n  const [value, setValue] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: style,\n    className: className,\n    \"aria-labelledby\": labeledBy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.Children.toArray(children).filter(child => !value || child.props.children.toLowerCase().startsWith(value))));\n});\nconst filterObject = {\n  'region': 'Region',\n  'quantity': 'Quantity',\n  'price': 'Price'\n};\nconst menuState = {\n  'region': false,\n  'quantity': false,\n  'price': false\n};\n\nconst onSelect = (eventKey, event) => {\n  console.log(eventKey);\n  menuState[eventKey] = !menuState[eventKey];\n  console.log(menuState);\n};\n\nconst filters = ['Region', 'Quantity', 'Price'];\nlet selectedFilters = [];\nexport default function DynamicFilters() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DynamicFilters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, selectedFilters.map((variant, idx) => /*#__PURE__*/React.createElement(DropdownButton, {\n    as: ButtonGroup,\n    key: variant,\n    id: `dropdown-variants-${variant}`,\n    variant: `outline-${variant.toLowerCase()}`,\n    title: filters[idx],\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Active Item\"), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Separated link\"))), /*#__PURE__*/React.createElement(Dropdown, {\n    id: `dropdown-variants-filter`,\n    variant: `outline-dark`,\n    title: \"Filter\",\n    className: \"dds\",\n    onSelect: onSelect,\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    as: CustomToggle,\n    id: \"dropdown-custom-components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Filter by...\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    as: CustomMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"region\",\n    active: menuState['region'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Region\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"quantity\",\n    active: menuState['quantity'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"price\",\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Price\"))));\n}","map":{"version":3,"sources":["/Users/mac/Developer/School/CS1920/COVID-19-Frontend/src/components/SupplyList/DynamicFilters.js"],"names":["DropdownButton","CaretDownFill","ButtonGroup","Dropdown","React","useState","CustomToggle","forwardRef","children","onClick","ref","e","preventDefault","CustomMenu","style","className","labeledBy","value","setValue","Children","toArray","filter","child","props","toLowerCase","startsWith","filterObject","menuState","onSelect","eventKey","event","console","log","filters","selectedFilters","DynamicFilters","map","variant","idx"],"mappings":"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","sourcesContent":["import DropdownButton from 'react-bootstrap/DropdownButton';\nimport { CaretDownFill } from 'react-bootstrap-icons';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport React, { useState } from 'react';\n\n// The forwardRef is important!!\n// Dropdown needs access to the DOM node in order to position the Menu\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    &nbsp;\n    <CaretDownFill/>\n  </a>\n));\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    const [value, setValue] = useState('');\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <ul className=\"list-unstyled\">\n          {React.Children.toArray(children).filter(\n            (child) =>\n              !value || child.props.children.toLowerCase().startsWith(value),\n          )}\n        </ul>\n      </div>\n    );\n  },\n);\n\nconst filterObject = {\n    'region': 'Region',\n    'quantity': 'Quantity',\n    'price': 'Price'\n}\nconst menuState = {\n    'region': false,\n    'quantity': false,\n    'price': false\n}\n\nconst onSelect = (eventKey, event) => {\n    console.log(eventKey);\n    menuState[eventKey] = !menuState[eventKey];\n    console.log(menuState);\n};\n\nconst filters = ['Region','Quantity','Price'];\nlet selectedFilters = [];\n\nexport default function DynamicFilters(){\n    return(\n        <div className=\"DynamicFilters\">\n            {selectedFilters.map(\n                (variant, idx) => (\n                    <DropdownButton\n                        as={ButtonGroup}\n                        key={variant}\n                        id={`dropdown-variants-${variant}`}\n                        variant={`outline-${variant.toLowerCase()}`}\n                        title={filters[idx]}\n                        block\n                    >\n                        <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"3\" active>\n                        Active Item\n                        </Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n                    </DropdownButton>\n                ),\n            )}\n            <Dropdown\n                id={`dropdown-variants-filter`}\n                variant={`outline-dark`}\n                title='Filter'\n                className='dds'\n                onSelect= {onSelect}\n                block\n            >\n                <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n                    Filter by...\n                </Dropdown.Toggle>\n                <Dropdown.Menu as={CustomMenu}>\n                    <Dropdown.Item\n                        eventKey=\"region\"\n                        active={menuState['region']}>\n                        Region\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                        eventKey=\"quantity\"\n                        active={menuState['quantity']}>\n                        Quantity\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                        eventKey=\"price\"\n                        active={true}>\n                        Price\n                    </Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}