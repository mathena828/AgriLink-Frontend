{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Developer/School/CS1920/COVID-19-Frontend/src/components/SupplyList.js\";\nimport filterFactory, { textFilter, numberFilter } from \"react-bootstrap-table2-filter\";\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../stylesheets/SupplyList.css\";\nimport SupplyForm from \"./SupplyForm.js\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nconst supplies = [{\n  index: 1,\n  supplier: {\n    organization: \"Test Organization 1\",\n    first_name: \"Organization\",\n    last_name: \"One\",\n    mobile: \"1234567890\",\n    email: \"test@organization.one\",\n    is_verified: true,\n    code: \"TSTORG1\"\n  },\n  name: \"Test Card\",\n  region: \"National Capital Region\",\n  address: \"Test address\",\n  quantity: 5,\n  unit: \"kg\",\n  price: 1000,\n  description: \"Test description\"\n}, {\n  index: 2,\n  supplier: {\n    organization: \"Test Organization 1\",\n    first_name: \"Organization\",\n    last_name: \"One\",\n    mobile: \"1234567890\",\n    email: \"test@organization.one\",\n    is_verified: true,\n    code: \"TSTORG1\"\n  },\n  name: \"Test Bigas\",\n  region: \"National Capital Region\",\n  address: \"Test address\",\n  quantity: 3,\n  unit: \"kg\",\n  price: 3000,\n  description: \"Test description\"\n}, {\n  index: 3,\n  supplier: {\n    organization: \"Test Organization 2\",\n    first_name: \"Organization\",\n    last_name: \"Two\",\n    mobile: \"1234567890\",\n    email: \"test@organization.two\",\n    is_verified: true,\n    code: \"TSTORG2\"\n  },\n  name: \"Test Banana\",\n  region: \"Cordillera Administrative Region\",\n  address: \"Test address\",\n  quantity: 4,\n  unit: \"kg\",\n  price: 2000,\n  description: \"Test description\"\n}];\nconst columns = [{\n  dataField: \"id\",\n  text: \"ID\",\n  sort: true,\n  searchable: false\n}, {\n  dataField: \"name\",\n  text: \"Name\"\n}, {\n  dataField: \"region\",\n  text: \"Region\",\n  sort: true,\n  searchable: false,\n  filter: textFilter()\n}, {\n  dataField: \"quantity\",\n  text: \"Quantity\",\n  sort: true,\n  searchable: false,\n  filter: textFilter()\n}, {\n  dataField: \"unit\",\n  text: \"Unit\",\n  searchable: false\n}, {\n  dataField: \"price\",\n  text: \"Price\",\n  sort: true,\n  searchable: false,\n  filter: textFilter()\n}];\n\nasync function fetchSupplier(id) {\n  let returnData = {};\n\n  try {\n    const supplier = await axios.get(`http://localhost:8000/api/supplier/${id}`);\n    const {\n      data,\n      status\n    } = supplier;\n    if (status !== 200) throw new Error(\"Error in getSupply call.\");\n    returnData = data;\n  } catch (e) {\n    console.log(e);\n    returnData = false;\n  }\n\n  return returnData;\n}\n\nconst expandRow = {\n  onlyOneExpanding: true,\n  onExpand: async (row, isExpand, rowIndex, e) => {\n    const supplier = await fetchSupplier(row.supplier);\n    row.supplierObject = supplier;\n  },\n  renderer: row => /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, `Supply Address: ${row.address}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, `Supply Description: ${row.description}`)), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, `Supplier: ${row.supplierObject.first_name} ${row.supplierObject.last_name}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, `Organization: ${row.supplierObject.organization}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Contact Information:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, `Mobile Number - ${row.supplierObject.mobile}`), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, `Email - ${row.supplierObject.email}`))))\n};\nlet state = false;\n\nconst TableSearch = props => {\n  let input;\n\n  const handleClick = () => {\n    if (state) {\n      props.onClear();\n      input.value = '';\n    } else props.onSearch(input.value);\n\n    state = !state;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Search Supply\",\n    ref: n => input = n,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, state ? 'Clear' : 'Search'))))));\n};\n\nfunction SupplyList({\n  auth\n}) {\n  const [supplies, setSupplies] = useState([]);\n  useEffect(() => {\n    async function fetchSupplies() {\n      let returnData = [];\n\n      try {\n        const getSupply = await axios.get(\"http://localhost:8000/api/supply\");\n        const {\n          data,\n          status\n        } = getSupply;\n        if (status !== 200) throw new Error(\"Error in getSupply call.\");\n        setSupplies(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchSupplies();\n  }, []);\n  const pagination = paginationFactory({\n    totalSize: supplies.length,\n    sizePerPage: 5\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SupplyList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, \"Supply List\"))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"main-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"id\",\n    data: supplies,\n    columns: columns,\n    search: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, props => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableSearch, Object.assign({}, props.searchProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n    bordered: false,\n    pagination: pagination,\n    filter: filterFactory(),\n    expandRow: expandRow,\n    bootstrap4: true,\n    filterPosition: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }))))))));\n}\n\nSupplyList.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(SupplyList);","map":{"version":3,"sources":["/Users/mac/Developer/School/CS1920/COVID-19-Frontend/src/components/SupplyList.js"],"names":["filterFactory","textFilter","numberFilter","paginationFactory","ToolkitProvider","BootstrapTable","FormControl","InputGroup","Jumbotron","Container","Button","SupplyForm","Card","React","useState","useEffect","Link","connect","Row","Col","PropTypes","axios","supplies","index","supplier","organization","first_name","last_name","mobile","email","is_verified","code","name","region","address","quantity","unit","price","description","columns","dataField","text","sort","searchable","filter","fetchSupplier","id","returnData","get","data","status","Error","e","console","log","expandRow","onlyOneExpanding","onExpand","row","isExpand","rowIndex","supplierObject","renderer","state","TableSearch","props","input","handleClick","onClear","value","onSearch","n","SupplyList","auth","setSupplies","fetchSupplies","getSupply","pagination","totalSize","length","sizePerPage","searchProps","baseProps","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import filterFactory, {\n  textFilter,\n  numberFilter,\n} from \"react-bootstrap-table2-filter\";\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../stylesheets/SupplyList.css\";\nimport SupplyForm from \"./SupplyForm.js\";\nimport Card from \"react-bootstrap/Card\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nconst supplies = [\n  {\n    index: 1,\n    supplier: {\n      organization: \"Test Organization 1\",\n      first_name: \"Organization\",\n      last_name: \"One\",\n      mobile: \"1234567890\",\n      email: \"test@organization.one\",\n      is_verified: true,\n      code: \"TSTORG1\"\n    },\n    name: \"Test Card\",\n    region: \"National Capital Region\",\n    address: \"Test address\",\n    quantity: 5,\n    unit: \"kg\",\n    price: 1000,\n    description: \"Test description\",\n  },\n  {\n    index: 2,\n    supplier: {\n      organization: \"Test Organization 1\",\n      first_name: \"Organization\",\n      last_name: \"One\",\n      mobile: \"1234567890\",\n      email: \"test@organization.one\",\n      is_verified: true,\n      code: \"TSTORG1\"\n    },\n    name: \"Test Bigas\",\n    region: \"National Capital Region\",\n    address: \"Test address\",\n    quantity: 3,\n    unit: \"kg\",\n    price: 3000,\n    description: \"Test description\",\n  },\n  {\n    index: 3,\n    supplier: {\n      organization: \"Test Organization 2\",\n      first_name: \"Organization\",\n      last_name: \"Two\",\n      mobile: \"1234567890\",\n      email: \"test@organization.two\",\n      is_verified: true,\n      code: \"TSTORG2\"\n    },\n    name: \"Test Banana\",\n    region: \"Cordillera Administrative Region\",\n    address: \"Test address\",\n    quantity: 4,\n    unit: \"kg\",\n    price: 2000,\n    description: \"Test description\",\n  },\n];\nconst columns = [\n  {\n    dataField: \"id\",\n    text: \"ID\",\n    sort: true,\n    searchable: false,\n  },\n  {\n    dataField: \"name\",\n    text: \"Name\"\n  },\n  {\n    dataField: \"region\",\n    text: \"Region\",\n    sort: true,\n    searchable: false,\n    filter: textFilter(),\n  },\n  {\n    dataField: \"quantity\",\n    text: \"Quantity\",\n    sort: true,\n    searchable: false,\n    filter: textFilter(),\n  },\n  {\n    dataField: \"unit\",\n    text: \"Unit\",\n    searchable: false,\n  },\n  {\n    dataField: \"price\",\n    text: \"Price\",\n    sort: true,\n    searchable: false,\n    filter: textFilter(),\n  },\n];\n\nasync function fetchSupplier (id) {\n  let returnData = {};\n  try {\n    const supplier = await axios\n      .get(`http://localhost:8000/api/supplier/${id}`);\n    const { data, status } = supplier;\n    if (status !== 200) throw new Error(\"Error in getSupply call.\");\n    returnData = data;\n  } catch (e) {\n    console.log(e);\n    returnData = false;\n  }\n  return returnData;\n}\n\nconst expandRow = {\n  onlyOneExpanding: true,\n  onExpand: async (row, isExpand, rowIndex, e) => {\n    const supplier = await fetchSupplier(row.supplier);\n    row.supplierObject = supplier;\n  },\n  renderer: row => (\n    <Container>\n      <Row>\n        <Col sm={4}>\n          <p>{`Supply Address: ${row.address}`}</p>\n          <p>{`Supply Description: ${row.description}`}</p>\n        </Col>\n        <Col sm={8}>\n          <p>{`Supplier: ${row.supplierObject.first_name} ${row.supplierObject.last_name}`}</p>\n          <p>{`Organization: ${row.supplierObject.organization}`}</p>\n          <p>Contact Information:</p>\n          <p>{`Mobile Number - ${row.supplierObject.mobile}`}</p>\n          <p>{`Email - ${row.supplierObject.email}`}</p>\n        </Col>\n      </Row>\n    </Container>\n  ),\n};\n\nlet state = false;\nconst TableSearch = (props) => {\n    let input;\n    const handleClick = () => {\n        if (state) {\n          props.onClear();\n          input.value = '';\n        }\n        else props.onSearch(input.value);\n        state = !state;\n    }\n    return (\n        <Container>\n            <Row>\n                <Col sm={8}></Col>\n                <Col sm={4}>\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Search Supply\"\n                            ref={ n => input = n }/>\n                        <InputGroup.Append>\n                            <Button\n                              variant=\"outline-secondary\"\n                              onClick={ handleClick }>\n                              { state? 'Clear': 'Search' }\n                            </Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nfunction SupplyList({ auth }) {\n  const [supplies, setSupplies] = useState([]);\n\n  useEffect(() => {\n    async function fetchSupplies() {\n      let returnData = [];\n      try {\n        const getSupply = await axios.get(\"http://localhost:8000/api/supply\");\n        const { data, status } = getSupply;\n        if (status !== 200) throw new Error(\"Error in getSupply call.\");\n        setSupplies(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchSupplies();\n  }, []);\n\n  const pagination = paginationFactory({\n    totalSize: supplies.length,\n    sizePerPage: 5,\n  });\n\n  return (\n    <div className=\"SupplyList\">\n      <div>\n        <Jumbotron className=\"text-center\">\n          <h1>Supply List</h1>\n        </Jumbotron>\n      </div>\n      <Container>\n        <Card className='main-card'>\n          <Card.Body>\n            <ToolkitProvider\n                keyField='id'\n                data={ supplies }\n                columns={ columns }\n                search\n            >\n              {\n                props => (\n                    <div>\n                        <TableSearch { ...props.searchProps } />\n                        <BootstrapTable\n                          { ...props.baseProps }\n                          bordered={ false }\n                          pagination={ pagination }\n                          filter={ filterFactory() }\n                          expandRow={ expandRow }\n                          bootstrap4\n                          filterPosition=\"bottom\"\n                        />\n                    </div>\n                )\n              }\n            </ToolkitProvider>\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n\nSupplyList.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(SupplyList);\n"]},"metadata":{},"sourceType":"module"}