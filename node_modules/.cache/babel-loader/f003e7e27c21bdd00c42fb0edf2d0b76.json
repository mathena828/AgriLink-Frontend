{"ast":null,"code":"var _jsxFileName = \"/home/china/Desktop/upri/COVID-19-Frontend/src/components/OrgForm.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport '../stylesheets/formStyle.css';\nimport { Link } from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst OrgForm = ({\n  orgName,\n  setOrgName,\n  firstName,\n  setFirstName,\n  lastName,\n  setLastName,\n  email,\n  setEmail,\n  phone,\n  setPhone,\n  navigation\n}) => {\n  const {\n    register,\n    errors,\n    handleSubmit\n  } = useForm();\n  const {\n    go,\n    next\n  } = navigation;\n\n  const onSubmit = data => {\n    console.log(data);\n    go(\"supply\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"OrgForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 34\n    }\n  }, \"Back to Home\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }, \"Hi, thank you for registering your produce to the site. Just answer this form and we'll be good to go!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Organization Information\"), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Organization\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"orgName\",\n    ref: register({\n      required: true,\n      maxLength: 128\n    }),\n    value: orgName,\n    className: \"col-sm-6\",\n    onChange: e => setOrgName(e.target.value),\n    type: \"text\",\n    placeholder: \"Organization Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Answer \\\"Independent\\\" if under no organization.\")), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Representative\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"firstName\",\n    ref: register,\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    type: \"text\",\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"lastName\",\n    ref: register({\n      required: 'Required'\n    }),\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    type: \"text\",\n    placeholder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Contact Information\"), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"phone\",\n    value: phone,\n    ref: register({\n      required: 'Required'\n    }),\n    onChange: e => setPhone(e.target.value),\n    type: \"text\",\n    placeholder: \"Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    value: email,\n    ref: register({\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), errors.email && errors.email.message))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleSubmit(onSubmit),\n    variant: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Next\", /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"bi bi-arrow-right\",\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10.146 4.646a.5.5 0 01.708 0l3 3a.5.5 0 010 .708l-3 3a.5.5 0 01-.708-.708L12.793 8l-2.647-2.646a.5.5 0 010-.708z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M2 8a.5.5 0 01.5-.5H13a.5.5 0 010 1H2.5A.5.5 0 012 8z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }))), ' '), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default OrgForm;","map":{"version":3,"sources":["/home/china/Desktop/upri/COVID-19-Frontend/src/components/OrgForm.js"],"names":["React","useForm","Form","Button","Link","Jumbotron","OrgForm","orgName","setOrgName","firstName","setFirstName","lastName","setLastName","email","setEmail","phone","setPhone","navigation","register","errors","handleSubmit","go","next","onSubmit","data","console","log","required","maxLength","e","target","value","pattern","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form'\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport '../stylesheets/formStyle.css';\nimport { Link } from 'react-router-dom';\n\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst OrgForm = ({ orgName, setOrgName, firstName, setFirstName, lastName, setLastName, email, setEmail, phone, setPhone,navigation })=>{\n    const { register, errors, handleSubmit } = useForm();\n    const {go, next} = navigation;\n    const onSubmit = data => { console.log(data); go(\"supply\") }\n\n    return(\n        <div className =\"OrgForm\">\n        <div>\n                <Jumbotron>\n                    <Link to=\"/\"><Button variant=\"outline-secondary\">Back to Home</Button></Link>\n                   <h3>Hi, thank you for registering your produce to the site. \n                       Just answer this form and we'll be good to go!</h3> \n                </Jumbotron>\n        </div>\n        <div className=\"container\">\n            \n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <h3>Organization Information</h3>\n                <Form.Label>Organization</Form.Label>\n                <Form.Group>\n                    \n                    <Form.Control \n                    name=\"orgName\"\n                    ref={register({ required: true, maxLength: 128 })}\n                    value={orgName}\n                    className=\"col-sm-6\"\n                    onChange={e=>setOrgName(e.target.value)}\n                    type=\"text\" placeholder=\"Organization Name\" />\n\n                    <Form.Text className=\"text-muted\">\n                        Answer \"Independent\" if under no organization.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Label>Representative</Form.Label>\n                <Form.Group className=\"container\">\n\n                    <div className=\"row\">\n                        <Form.Group>\n                        <Form.Control \n                        name=\"firstName\"\n                        ref = {register}\n                        value={firstName}\n                        onChange={e=>setFirstName(e.target.value)}\n                        type=\"text\" placeholder=\"First Name\" />\n                        </Form.Group>\n                        <Form.Group>\n                        <Form.Control \n                        name=\"lastName\"\n                        ref={register({required: 'Required'})}\n                        value={lastName}\n                        onChange={e=>setLastName(e.target.value)}\n                        type=\"text\" placeholder=\"Last Name\" />\n                        </Form.Group>\n                    </div>\n                </Form.Group>\n                <Form.Label>Contact Information</Form.Label>\n                <Form.Group className=\"container\">\n                    \n                    <div className=\"row\">\n                    <Form.Group>\n                    <Form.Control\n                    name=\"phone\" \n                    value={phone}\n                    ref={register({required: 'Required'})}\n                    onChange={e=>setPhone(e.target.value)}\n                    type=\"text\" placeholder=\"Phone Number\" />\n                    </Form.Group>\n                    <Form.Group>\n                    <Form.Control \n                    name=\"email\"\n                    value={email}\n                    ref={register({\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                          message: \"invalid email address\"\n                        }\n                    })}\n                    onChange={e=>{setEmail(e.target.value);}}\n                    type=\"email\" placeholder=\"Email\" />\n                    {errors.email && errors.email.message}\n                    </Form.Group>\n                    </div>  \n                </Form.Group>\n                <Button onClick={() => handleSubmit(onSubmit)} variant=\"info\">Next\n            <svg className=\"bi bi-arrow-right\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M10.146 4.646a.5.5 0 01.708 0l3 3a.5.5 0 010 .708l-3 3a.5.5 0 01-.708-.708L12.793 8l-2.647-2.646a.5.5 0 010-.708z\" clipRule=\"evenodd\"/>\n  <path fillRule=\"evenodd\" d=\"M2 8a.5.5 0 01.5-.5H13a.5.5 0 010 1H2.5A.5.5 0 012 8z\" clipRule=\"evenodd\"/>\n</svg>\n            </Button>{' '}\n            </Form>\n            <div className=\"container\">\n                <div className=\"row\">\n                \n                </div>\n            </div>\n\n        </div>\n        </div>\n    );\n}\n\nexport default OrgForm;"]},"metadata":{},"sourceType":"module"}